name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  android-build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      with:
        api-level: 33
        build-tools: 33.0.0
        ndk-version: 23.1.7779620
    
    - name: Cache Gradle packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    
    - name: Build with Gradle
      run: ./gradlew assembleRelease
    
    - name: Run tests
      run: ./gradlew test

  cpp-analysis:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y clang-tidy cppcheck build-essential cmake libboost-all-dev
    
    # Use existing CMakeLists.txt
    
    - name: Configure CMake for analysis
      run: |
        mkdir -p build
        cd build
        cmake -DCMAKE_EXPORT_COMPILE_COMMANDS=ON ..
    
    - name: Run clang-tidy (non-blocking)
      run: |
        if [ -d "src" ]; then
          find src -name "*.cpp" -o -name "*.hpp" | head -5 | xargs -I {} clang-tidy {} -p build -- -std=c++17 || echo "clang-tidy completed with warnings"
        else
          echo "No src directory found, skipping clang-tidy"
        fi
    
    - name: Run cppcheck
      run: |
        if [ -d "src" ]; then
          cppcheck --enable=warning,style --suppress=missingIncludeSystem --error-exitcode=0 src || echo "cppcheck completed with warnings"
        else
          echo "No src directory found, skipping cppcheck"
        fi

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y flawfinder
    
    - name: Run flawfinder
      run: |
        if [ -d "src" ]; then
          flawfinder --minlevel=3 src || echo "flawfinder completed with warnings"
        else
          echo "No src directory found, skipping flawfinder"
        fi
        
        if [ -d "app/src/main/cpp" ]; then
          flawfinder --minlevel=3 app/src/main/cpp || echo "flawfinder completed with warnings"
        fi